venom_GT <- 270
chiron <- 261
veyron <- 268
mean(venom_GT,chiron,veyron)
mean(venom_GT,chiron,veyron)
#mean(venom_GT,chiron,veyron) this doesnt work you have to concatenate it instead
top_speed <- c(chiron, venom_GT, veyron)
#mean(venom_GT,chiron,veyron) this doesnt work you have to concatenate it instead
top_speed <- c(chiron, venom_GT, veyron)
mean(top_speed)
new_vector <- c(7, 6.2, 5, 9, NA, 4, 9.8, 7, 3, 2)
mean(new_vector)
mean(new_vector, na.rm=T) #na.rm removes the NA values in the vector
x <- c(2, 8, 6, 6, 7, 4, 9, 9, 9, 10)
x <- c(2, 8, 6, 6, 7, 4, 9, 9, 9, 10)
days_of_the_week[3]
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thrusday", "Friday", "Saturday", "Sunday")
my_vector <- c(10, 20, 30)
my_vector <- c(10, 20, 30)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thrusday", "Friday", "Saturday", "Sunday")
my_vector_sequence <- c(1:100)
my_vector_sequence
days_of_the_week[3]
days_of_the_week[15]
days_of_the_week[15]
days_of_the_week(15)
days_of_the_week{15}
days_of_the_week[15]
my_vector_sequence[15]
my_vector_sequence==15
#my_vector_sequence==15
my_vector_sequence <=10
#my_vector_sequence==15
#my_vector_sequence <=10 # doing this function less then or equal to can give us values less then or equal to 10
yet_another_new_vector <-my_vector_sequence[my_vector_sequence<=15]
Philosophers_Stone <- c(317.5, 657.1)
Chamber_of_Secrets <- c(261.9, 616.9)
Prisoner_of_Azkaban <- c(249.5, 547.1)
Goblet_of_Fire <- c(290.0, 606.8)
Order_of_the_Phoenix <- c(292.0, 647.8)
Half_Blood_Prince <- c(301.9, 632.4)
Deathly_Hallows_1 <- c(295.9, 664.3)
Deathly_Hallows_2 <- c(381.0, 960.5)
#you are combiining all of these into a single vector and it'll go down the list
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
box_office
harry_potter_matrix <- matrix(box_office, nrow = 8, byrow = T)
harry_potter_matrix
region <- c("US", "non-US")
region
titles <- c("Philosophers_Stone", "Chamber_of_Secrets", "Prisoner_of_Azkaban", "Goblet_of_Fire", "Order_of_the_Phoenix", "Half_Blood_Prince", "Deathly_Hallows_1", "Deathly_Hallows_2")
titles
colnames(harry_potter_matrix) <- region
rownames(harry_potter_matrix) <- titles
harry_potter_matrix
global <- rowSums(harry_potter_matrix)
global
all_harry_potter_matrix <- cbind(harry_potter_matrix, global)
all_harry_potter_matrix
sum(box_office)
is.numeric(box_office)
my_vector_sequence==15
my_vector_sequence <- c(1:100)
my_vector_sequence
my_vector_sequence==15
#my_vector_sequence <=10 # doing this function less then or equal to can give us values less then or equal to 10
yet_another_new_vector <-my_vector_sequence[my_vector_sequence<=15]
spring_1 <- c(36.25, 35.40, 35.30)
spring_2 <- c(35.15, 35.35, 33.35)
spring_3 <- c(30.70, 29.65, 29.20)
spring_4 <- c(39.70, 40.05, 38.65)
spring_5 <- c(31.85, 31.40, 29.30)
spring_6 <- c(30.20, 30.65, 29.75)
spring_7 <- c(32.90, 32.50, 32.80)
spring_8 <- c(36.80, 36.45, 33.15)
spring_1 <- c(36.25, 35.40, 35.30)
spring_2 <- c(35.15, 35.35, 33.35)
spring_3 <- c(30.70, 29.65, 29.20)
spring_4 <- c(39.70, 40.05, 38.65)
spring_5 <- c(31.85, 31.40, 29.30)
spring_6 <- c(30.20, 30.65, 29.75)
spring_7 <- c(32.90, 32.50, 32.80)
spring_8 <- c(36.80, 36.45, 33.15)
spring_1 ==36.2
4. Build a data matrix that has the springs as rows and the columns as scientists.
```{r}
spring_data <- c(spring_1, spring_2)
```
spring_1 <- c(36.25, 35.40, 35.30)
spring_2 <- c(35.15, 35.35, 33.35)
spring_3 <- c(30.70, 29.65, 29.20)
spring_4 <- c(39.70, 40.05, 38.65)
spring_5 <- c(31.85, 31.40, 29.30)
spring_6 <- c(30.20, 30.65, 29.75)
spring_7 <- c(32.90, 32.50, 32.80)
spring_8 <- c(36.80, 36.45, 33.15)
4. Build a data matrix that has the springs as rows and the columns as scientists.
```{r}
spring_data <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
```
4. Build a data matrix that has the springs as rows and the columns as scientists.
```{r}
spring_data <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
spring_data
```
4. Build a data matrix that has the springs as rows and the columns as scientists.
```{r}
spring_data <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
spring_data
```
5. The names of the springs are 1.Bluebell Spring, 2.Opal Spring, 3.Riverside Spring, 4.Too Hot Spring, 5.Mystery Spring,
6.Emerald Spring, 7.Black Spring, 8.Pearl Spring. Name the rows and columns in the data matrix. Start by making two new vectors with the names, then use `colnames()` and `rownames()` to name the columns and rows.
```{r}
spring_names <- c(Bluebell Spring, Opal Spring, Riverside Spring, Too Hot Spring, Mystery Spring, Emerald Spring,Black Spring, Pearl Spring )
```
5. The names of the springs are 1.Bluebell Spring, 2.Opal Spring, 3.Riverside Spring, 4.Too Hot Spring, 5.Mystery Spring,
6.Emerald Spring, 7.Black Spring, 8.Pearl Spring. Name the rows and columns in the data matrix. Start by making two new vectors with the names, then use `colnames()` and `rownames()` to name the columns and rows.
```{r}
spring_names <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring","Black Spring", "Pearl Spring" )
4. Build a data matrix that has the springs as rows and the columns as scientists.
```{r}
spring_data <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
#spring_data
spring_data_matrix <- matrix(spring_data)
```
4. Build a data matrix that has the springs as rows and the columns as scientists.
```{r}
spring_data <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
#spring_data
spring_data_matrix <- matrix(spring_data)
spring_data_matrix
```
4. Build a data matrix that has the springs as rows and the columns as scientists.
```{r}
spring_data <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
#spring_data
spring_data_matrix <- matrix(spring_data, nrow=8, byrow=T)
spring_data_matrix
```
5. The names of the springs are 1.Bluebell Spring, 2.Opal Spring, 3.Riverside Spring, 4.Too Hot Spring, 5.Mystery Spring,
6.Emerald Spring, 7.Black Spring, 8.Pearl Spring. Name the rows and columns in the data matrix. Start by making two new vectors with the names, then use `colnames()` and `rownames()` to name the columns and rows.
```{r}
spring_names <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring","Black Spring", "Pearl Spring" )
colnames(spring_names)
5. The names of the springs are 1.Bluebell Spring, 2.Opal Spring, 3.Riverside Spring, 4.Too Hot Spring, 5.Mystery Spring,
6.Emerald Spring, 7.Black Spring, 8.Pearl Spring. Name the rows and columns in the data matrix. Start by making two new vectors with the names, then use `colnames()` and `rownames()` to name the columns and rows.
```{r}
spring_names <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring","Black Spring", "Pearl Spring" )
colnames(spring_data_matrix) <-spring_names
5. The names of the springs are 1.Bluebell Spring, 2.Opal Spring, 3.Riverside Spring, 4.Too Hot Spring, 5.Mystery Spring,
6.Emerald Spring, 7.Black Spring, 8.Pearl Spring. Name the rows and columns in the data matrix. Start by making two new vectors with the names, then use `colnames()` and `rownames()` to name the columns and rows.
```{r}
spring_names <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring","Black Spring", "Pearl Spring" )
colnames(spring_data_matrix) <- spring_names
5. The names of the springs are 1.Bluebell Spring, 2.Opal Spring, 3.Riverside Spring, 4.Too Hot Spring, 5.Mystery Spring,
6.Emerald Spring, 7.Black Spring, 8.Pearl Spring. Name the rows and columns in the data matrix. Start by making two new vectors with the names, then use `colnames()` and `rownames()` to name the columns and rows.
```{r}
spring_names <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring","Black Spring", "Pearl Spring" )
spring_names [2]
colnames(spring_data_matrix)<- spring_names
5. The names of the springs are 1.Bluebell Spring, 2.Opal Spring, 3.Riverside Spring, 4.Too Hot Spring, 5.Mystery Spring,
6.Emerald Spring, 7.Black Spring, 8.Pearl Spring. Name the rows and columns in the data matrix. Start by making two new vectors with the names, then use `colnames()` and `rownames()` to name the columns and rows.
```{r}
spring_names <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring","Black Spring", "Pearl Spring" )
spring_names [2]
colnames(spring_data_matrix)<- spring_names
5. The names of the springs are 1.Bluebell Spring, 2.Opal Spring, 3.Riverside Spring, 4.Too Hot Spring, 5.Mystery Spring,
6.Emerald Spring, 7.Black Spring, 8.Pearl Spring. Name the rows and columns in the data matrix. Start by making two new vectors with the names, then use `colnames()` and `rownames()` to name the columns and rows.
```{r}
spring_names <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring","Black Spring", "Pearl Spring" )
spring_names [2]
#colnames(spring_data_matrix)<- spring_names
scientist_name <- c("jil", "steven", "susan")
colnames(spring_data_matrix)<- scientist_name
spring_data_matrix
#spring_data_matrix
rownames(spring_names)
```
#spring_data_matrix
rownames(spring_data_matrix)<- spring_name
#spring_data_matrix
rownames(spring_data_matrix)<- spring_names
rownames(spring_data_matrix)<- spring_names
spring_data_matrix
```
spring_data_matrix<-cbind(spring_data_matrix,avg_temp)
avg_temp <- rowMeans(spring_data_matrix)
#average_row_temp
spring_data_matrix<-cbind(spring_data_matrix,avg_temp)
spring_data_matrix<-cbind(spring_data_matrix,avg_temp)
spring_data_matrix<-cbind(spring_data_matrix,avg_temp)
spring_data_matrix
spring_data_matrix<-cbind(spring_data_matrix,avg_temp)
spring_data_matrix
