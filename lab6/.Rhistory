group_by(vore) %>% #we are grouping by feeding ecology
summarize(min_bodywt = min(bodywt),
max_bodywt = max(bodywt),
mean_bodywt = mean(bodywt),
total=n())
msleep %>%
count(order, sort = T)
msleep %>%
count(vore, sort = T)
msleep %>%
count(order, vore, sort = TRUE)
msleep %>%
select(name:order) %>%
add_count(order) %>%
top_n(-5) #the bottom 5
msleep %>%
add_count(vore)
msleep %>%
select(name:order) %>%
add_count(order)
msleep %>%
select(name:order) %>%
add_count(order) %>%
top_n(5) #the top 5
msleep %>%
select(name:order) %>%
add_count(order)
msleep %>%
select(name:order) %>%
add_count(order, order=T)
msleep %>%
select(name:order) %>%
add_count(order)
library("janitor")
msleep24 %>% tabyl(vore)
msleep24 %>%
tabyl(vore) %>%
adorn_pct_formatting()
msleep24 %>%
tabyl(vore) %>%
adorn_pct_formatting(gigits=2) %>%
adorn_ns()
msleep24 %>%
tabyl(vore) %>%
adorn_pct_formatting(gigits=2)
msleep24 %>%
tabyl(vore) %>%
adorn_pct_formatting(digits=2)
msleep24 %>%
tabyl(vore) %>%
adorn_pct_formatting(digits=1)
msleep24 %>%
tabyl(vore) %>%
adorn_pct_formatting(digits=2)
msleep24 %>%
tabyl(vore, sleep_total_24)
names(msleep)
msleep %>%
tabyl(vore, order)
msleep %>%
tabyl(order, vore)
msleep
head(msleep)
large <-
msleep %>%
select(name, genus, bodywt, sleep_total) %>%
filter(bodywt > 200) %>%
arrange(desc(bodywt))
large
mean(large$sleep_total)
msleep %>%
tabyl(order, vore)
msleep %>%
filter(bodywt > 200) %>%
summarize(mean_sleep_lg = mean(sleep_total))
msleep %>%
filter(bodywt > 200) %>%
summarize(mean_sleep_lg = mean(sleep_total),
min_sleep_lg = min(sleep_total),
max_sleep_lg = max(sleep_total),
total = n())
msleep %>%
filter(order=="Lagomorpha")
msleep %>%
filter(order=="Primates")
msleep %>%
filter(order=="Primates") %>%
summarize(mean_bodywt = mean(bodywt),
min_bodywt = min(bodywt),
max_bodywt = max(bodywt),
total = n())
msleep %>%
filter(bodywt >= 200) %>%
summarise(n_genera=n_distinct(genus))
msleep %>%
filter(bodywt > 100) %>%
summarise(n_genera=n_distinct(genus))
msleep %>%
filter(bodywt > 100) %>%
tabyl(genus)
msleep %>%
summarise(n_genera=n_distinct(genus))
msleep %>%
summarise(n_genera=n_distinct(genus),
total = n())
msleep %>%
summarize(ngenera = n_distinct(genus))
msleep %>%
summarize(min_bodywt = min(bodywt),
max_bodywt = max(bodywt),
mean_bodywt = mean(bodywt),
total = n())
msleep %>%
filter(!is.na(bodywt)) %>%
summarize(min_bodywt = min(bodywt),
max_bodywt = max(bodywt),
mean_bodywt = mean(bodywt),
total = n())
msleep %>%
filter(!is.na(bodywt)) %>%
summarize(min_bodywt = min(bodywt),
max_bodywt = max(bodywt),
mean_bodywt = mean(bodywt),
total = n())
msleep %>%
filter(!is.na(sleep_total)) %>%
summarize(min_sleep_total = min(sleep_total),
max_sleep_total = max(sleep_total),
mean_sleep_total = mean(sleep_total),
total = n())
msleep %>%
summarize(min_sleep_total = min(sleep_total),
max_sleep_total = max(sleep_total),
mean_sleep_total = mean(sleep_total),
total = n())
msleep %>%
count(vore, sort = T)
msleep %>%
count(vore, sort = T, na.rm=T)
msleep %>%
filter(!is.na(vore)) %>%
count(vore, sort = T)
?count
tally(msleep)
msleep %>%
summarize(vore)
msleep %>%
summarize()
msleep %>%
group_by(vore) %>%
summarize()
msleep %>%
group_by(vore) %>%
summarize(n())
msleep %>%
group_by(vore) %>%
summarize(total=n())
msleep %>%
group_by(vore) %>%
summarize(n=n())
msleep %>%
group_by(vore, na.rm=T) %>%
summarize(n=n())
msleep %>%
group_by(vore) %>%
summarize(n=n(na.rm=T))
msleep %>%
group_by(vore) %>%
summarize(n=n(), na.rm=T)
?count
msleep %>%
count(order, vore, sort = TRUE)
msleep %>%
tabyl(order, vore)
msleep %>%
tabyl(order, vore) %>%
adorn_ns()
msleep %>%
tabyl(order, vore) %>%
adorn_percentages() %>%
adorn_ns()
msleep %>%
tabyl(order, vore) %>%
adorn_percentages(digits=1) %>%
adorn_ns()
msleep %>%
tabyl(order, vore) %>%
adorn_percentages(digits=2) %>%
adorn_ns()
msleep %>%
tabyl(order, vore) %>%
adorn_pct_formatting(digits=1) %>%
adorn_ns()
msleep %>%
tabyl(order, vore) %>%
adorn_percentages() %>%
adorn_ns()
msleep %>%
tabyl(order, vore)
msleep %>%
tabyl(order, vore) %>%
adorn_percentages("row") %>%
adorn_pct_formatting(digits = 2) %>%
adorn_ns()
msleep %>%
tabyl(order, vore) %>%
adorn_percentages("row") %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns()
msleep
msleep %>%
tabyl(vore, order, conservation, show_missing_levels = FALSE) %>%
adorn_totals("row") %>%
adorn_percentages("all") %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns %>%
adorn_title
msleep %>%
tabyl(vore, order, show_missing_levels = FALSE) %>%
adorn_totals("row") %>%
adorn_percentages("all") %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns %>%
adorn_title
msleep %>%
tabyl(vore, order, show_missing_levels = FALSE) %>%
adorn_totals("row") %>%
adorn_percentages("all") %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns
msleep %>%
tabyl(vore, order, show_missing_levels = FALSE) %>%
adorn_totals("row") %>%
adorn_percentages("all") %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns %>%
adorn_title
msleep %>%
tabyl(conseervation, order, vore, show_missing_levels = FALSE) %>%
adorn_totals("row") %>%
adorn_percentages("all") %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns %>%
adorn_title
msleep %>%
tabyl(conservation, order, vore, show_missing_levels = FALSE) %>%
adorn_totals("row") %>%
adorn_percentages("all") %>%
adorn_pct_formatting(digits = 1) %>%
adorn_ns %>%
adorn_title
msleep %>%
add_count(vore)
msleep %>%
group_by(order) %>%
summarize(mean_brainwt = mean(brainwt))
msleep %>%
group_by(order) %>%
summarize(mean_brainwt = mean(brainwt, na.rm = TRUE))
msleep %>%
filter(order == "Cetacea")
msleep %>%
group_by(order) %>%
filter(!is.na(brainwt)) %>%
summarize(mean_brainwt = mean(brainwt))
msleep %>%
group_by(order) %>%
summarize(mean_brainwt = mean(brainwt, na.rm = TRUE))
penguins
penguins %>%
summarise(distinct_species = n_distinct(species),
distinct_island = n_distinct(island),
distinct_sex = n_distinct(sex))
penguins %>%
summarise(across(c(species, island, sex),
n_distinct))
install.packages(c("backports", "BH", "broom", "callr", "codetools", "colorspace", "cowplot", "cpp11", "crosstalk", "DBI", "dbplyr", "dplyr", "fansi", "foreign", "gdtools", "generics", "ggplot2", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "janitor", "KernSmooth", "knitr", "labeling", "leaflet", "lubridate", "Matrix", "nlme", "pkgbuild", "pkgload", "processx", "ps", "Rcpp", "rgdal", "rlang", "rmarkdown", "rvest", "sf", "sp", "stars", "testthat", "tibble", "tidyr", "tinytex", "tmap", "tmaptools", "withr", "xfun"))
install.packages(c("backports", "BH", "broom", "callr", "codetools", "colorspace", "cowplot", "cpp11", "crosstalk", "DBI", "dbplyr", "dplyr", "fansi", "foreign", "gdtools", "generics", "ggplot2", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "janitor", "KernSmooth", "knitr", "labeling", "leaflet", "lubridate", "Matrix", "nlme", "pkgbuild", "pkgload", "processx", "ps", "Rcpp", "rgdal", "rlang", "rmarkdown", "rvest", "sf", "sp", "stars", "testthat", "tibble", "tidyr", "tinytex", "tmap", "tmaptools", "withr", "xfun"))
install.packages(c("backports", "BH", "broom", "callr", "codetools", "colorspace", "cowplot", "cpp11", "crosstalk", "DBI", "dbplyr", "dplyr", "fansi", "foreign", "gdtools", "generics", "ggplot2", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "janitor", "KernSmooth", "knitr", "labeling", "leaflet", "lubridate", "Matrix", "nlme", "pkgbuild", "pkgload", "processx", "ps", "Rcpp", "rgdal", "rlang", "rmarkdown", "rvest", "sf", "sp", "stars", "testthat", "tibble", "tidyr", "tinytex", "tmap", "tmaptools", "withr", "xfun"))
install.packages(c("backports", "BH", "broom", "callr", "codetools", "colorspace", "cowplot", "cpp11", "crosstalk", "DBI", "dbplyr", "dplyr", "fansi", "foreign", "gdtools", "generics", "ggplot2", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "janitor", "KernSmooth", "knitr", "labeling", "leaflet", "lubridate", "Matrix", "nlme", "pkgbuild", "pkgload", "processx", "ps", "Rcpp", "rgdal", "rlang", "rmarkdown", "rvest", "sf", "sp", "stars", "testthat", "tibble", "tidyr", "tinytex", "tmap", "tmaptools", "withr", "xfun"))
install.packages(c("backports", "BH", "broom", "callr", "codetools", "colorspace", "cowplot", "cpp11", "crosstalk", "DBI", "dbplyr", "dplyr", "fansi", "foreign", "gdtools", "generics", "ggplot2", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "janitor", "KernSmooth", "knitr", "labeling", "leaflet", "lubridate", "Matrix", "nlme", "pkgbuild", "pkgload", "processx", "ps", "Rcpp", "rgdal", "rlang", "rmarkdown", "rvest", "sf", "sp", "stars", "testthat", "tibble", "tidyr", "tinytex", "tmap", "tmaptools", "withr", "xfun"))
install.packages(c("backports", "BH", "broom", "callr", "codetools", "colorspace", "cowplot", "cpp11", "crosstalk", "DBI", "dbplyr", "dplyr", "fansi", "foreign", "gdtools", "generics", "ggplot2", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "janitor", "KernSmooth", "knitr", "labeling", "leaflet", "lubridate", "Matrix", "nlme", "pkgbuild", "pkgload", "processx", "ps", "Rcpp", "rgdal", "rlang", "rmarkdown", "rvest", "sf", "sp", "stars", "testthat", "tibble", "tidyr", "tinytex", "tmap", "tmaptools", "withr", "xfun"))
install.packages(c("backports", "BH", "broom", "callr", "codetools", "colorspace", "cowplot", "cpp11", "crosstalk", "DBI", "dbplyr", "dplyr", "fansi", "foreign", "gdtools", "generics", "ggplot2", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "janitor", "KernSmooth", "knitr", "labeling", "leaflet", "lubridate", "Matrix", "nlme", "pkgbuild", "pkgload", "processx", "ps", "Rcpp", "rgdal", "rlang", "rmarkdown", "rvest", "sf", "sp", "stars", "testthat", "tibble", "tidyr", "tinytex", "tmap", "tmaptools", "withr", "xfun"))
penguins %>%
summarise(across(c(species, island, sex),
n_distinct))
library("tidyverse")
library("tidyverse")
library("janitor")
install.packages("skimr")
library("skimr")
?msleep
names(msleep)
remotes::install_github("allisonhorst/palmerpenguins")
install.packages(pkgs, lib, repos = getOption("repos"),
contriburl = contrib.url(repos, type),
method, available = NULL, destdir = NULL,
dependencies = NA, type = getOption("pkgType"),
configure.args = getOption("configure.args"),
configure.vars = getOption("configure.vars"),
clean = FALSE, Ncpus = getOption("Ncpus", 1L),
verbose = getOption("verbose"),
libs_only = FALSE, INSTALL_opts, quiet = FALSE,
keep_outputs = FALSE, ...)
install.packages(pkgs, lib, repos = getOption("repos"),
contriburl = contrib.url(repos, type),
method, available = NULL, destdir = NULL,
dependencies = NA, type = getOption("pkgType"),
configure.args = getOption("configure.args"),
configure.vars = getOption("configure.vars"),
clean = FALSE, Ncpus = getOption("Ncpus", 1L),
verbose = getOption("verbose"),
libs_only = FALSE, INSTALL_opts, quiet = FALSE,
keep_outputs = FALSE, ...)
remotes::install_github("allisonhorst/palmerpenguins")
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "hms", "htmltools", "Rcpp", "rlang", "tibble", "tinytex", "withr", "xfun"))
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "hms", "htmltools", "Rcpp", "rlang", "tibble", "tinytex", "withr", "xfun"))
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "hms", "htmltools", "Rcpp", "rlang", "tibble", "tinytex", "withr", "xfun"))
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "hms", "htmltools", "Rcpp", "rlang", "tibble", "tinytex", "withr", "xfun"))
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "hms", "htmltools", "Rcpp", "rlang", "tibble", "tinytex", "withr", "xfun"))
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "hms", "htmltools", "Rcpp", "rlang", "tibble", "tinytex", "withr", "xfun"))
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "hms", "htmltools", "Rcpp", "rlang", "tibble", "tinytex", "withr", "xfun"))
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "hms", "htmltools", "Rcpp", "rlang", "tibble", "tinytex", "withr", "xfun"))
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "hms", "htmltools", "Rcpp", "rlang", "tibble", "tinytex", "withr", "xfun"))
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "hms", "htmltools", "Rcpp", "rlang", "tibble", "tinytex", "withr", "xfun"))
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "hms", "htmltools", "Rcpp", "rlang", "tibble", "tinytex", "withr", "xfun"))
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "hms", "htmltools", "Rcpp", "rlang", "tibble", "tinytex", "withr", "xfun"))
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "hms", "htmltools", "Rcpp", "rlang", "tibble", "tinytex", "withr", "xfun"))
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "hms", "htmltools", "Rcpp", "rlang", "tibble", "tinytex", "withr", "xfun"))
?msleep
names(msleep)
library("tidyverse")
library("janitor")
install.packages("skimr")
library("skimr")
?msleep
names(msleep)
remotes::install_github("allisonhorst/palmerpenguins")
remotes::install_github("allisonhorst/palmerpenguins")
remotes::install_github("allisonhorst/palmerpenguins")
remotes::install_github("allisonhorst/palmerpenguins")
install.packages("remotes")
remotes::install_github("allisonhorst/palmerpenguins")
remotes::install_github("allisonhorst/palmerpenguins")
remotes::install_github("allisonhorst/palmerpenguins")
library("tidyverse")
library("janitor")
install.packages("skimr")
library("skimr")
install.packages("skimr")
?msleep
names(msleep)
library("tidyverse")
library("janitor")
install.packages("skimr")
library("skimr")
?msleep
names(msleep)
remotes::install_github("allisonhorst/palmerpenguins")
install.packages("remotes")
install.packages("remotes")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(skimr)
fisheries<-readr::read_csv("FAO_1950to2012_111914.csv")
fisheries<-readr::read_csv("FAO_1950to2012_111914.csv")
structure(fisheries)
glimpse(fisheries)
names(fisheries)
table(fisheries)
glimpse(fisheries)
structure(fisheries)
fisheries<- rename(fisheries,Country="country",'ISSCAAP group#'="isscaap_group_number",FAOmajorfishingarea="fao_major_fishing_area")
fisheries<- rename(fisheries,Country=="country",'ISSCAAP group#'="isscaap_group_number",FAOmajorfishingarea="fao_major_fishing_area")
structure(fisheries)
View(fisheries)
fisheries<- rename(fisheries,Country="country")
fisheries_clean<- rename(fisheries,Country="country")
fisheries%>%
select(Country,`ISSCAAP group#`)
fisheries<-janitor::clean_names(fisheries)
fisheries
names(fisheries)
tabyl(fisheries)
structure(fisheries)
fisheries$country <- as.factor(fisheries$country)
fisheries$isscaap_group_number <- as.factor(fisheries$isscaap_group_number)
fisheries$asfis_species_number <- as.factor(fisheries$asfis_species_number)
fisheries$fao_major_fishing_area <- as.factor(fisheries$fao_major_fishing_area)
fisheries_tidy <- fisheries %>%
pivot_longer(-c(country,common_name,isscaap_group_number,isscaap_taxonomic_group,asfis_species_number,asfis_species_name,fao_major_fishing_area,measure),
names_to = "year",
values_to = "catch",
values_drop_na = TRUE) %>%
mutate(year= as.numeric(str_replace(year, 'x', ''))) %>%
mutate(catch= str_replace(catch, c(' F'), replacement = '')) %>%
mutate(catch= str_replace(catch, c('...'), replacement = '')) %>%
mutate(catch= str_replace(catch, c('-'), replacement = '')) %>%
mutate(catch= str_replace(catch, c('0 0'), replacement = ''))
fisheries_tidy$catch <- as.numeric(fisheries_tidy$catch)
fisheries_tidy <- fisheries %>%
pivot_longer(-c(country,common_name,isscaap_group_number,isscaap_taxonomic_group,asfis_species_number,asfis_species_name,fao_major_fishing_area,measure),
names_to = "year",
values_to = "catch",
values_drop_na = TRUE) %>%
mutate(year= as.numeric(str_replace(year, 'x', ''))) %>%
mutate(catch= str_replace(catch, c(' F'), replacement = '')) %>%
mutate(catch= str_replace(catch, c('...'), replacement = '')) %>%
mutate(catch= str_replace(catch, c('-'), replacement = '')) %>%
mutate(catch= str_replace(catch, c('0 0'), replacement = ''))
fisheries_tidy$catch <- as.numeric(fisheries_tidy$catch)
fisheries%>%
counts(country)
fisheries%>%
count(country,sort=T)
refocus_fisheries<-fisheries%>%
select(country,isscaap_taxonomic_group,asfis_species_name,asfis_species_number,year,catch)
View(fisheries_tidy)
refocus_fisheries<-fisheries_tidy%>%
select(country,isscaap_taxonomic_group,asfis_species_name,asfis_species_number,year,catch)
refocus_fisheries
refocus_fisheries%>%
count(isscaap_taxonomic_group,asfis_species_name)
refocus_fisheries%>%
summarise(catch,desc=TRUE)
refocus_fisheries%>%
summarise(catch,desc(TRUE))
refocus_fisheries%>%
summarise(catch,sort=T)
refocus_fisheries%>%
summarise(country,catch,sort=T)
refocus_fisheries%>%
summarise(country,catch)
refocus_fisheries%>%
summarise(country,year,catch)%>%
filter(year=="2000")
refocus_fisheries<-fisheries_tidy%>%
select(country,isscaap_taxonomic_group,asfis_species_name,asfis_species_number,year,catch)
refocus_fisheries
refocus_fisheries<-fisheries_tidy%>%
select(country,isscaap_taxonomic_group,asfis_species_name,asfis_species_number,year,catch)
refocus_fisheries
refocus_fisheries%>%
group_by(country,catch,year)
refocus_fisheries%>%
group_by(country,catch,year)
refocus_fisheries%>%
count(country,catch)
refocus_fisheries%>%
count(country,catch,year=="2000")
refocus_fisheries%>%
count(country,catch,year)%>%
filter(year==2000)
refocus_fisheries%>%
count(country,catch,year)%>%
filter(year==2000)%>%
sum(country,catch)
refocus_fisheries%>%
count(country,catch,year)%>%
filter(year=='2000')%>%
sum(country,catch)
refocus_fisheries%>%
group_by(country,catch)
refocus_fisheries%>%
group_by(country,catch)%>%
filter(year==2000)
refocus_fisheries%>%
tabyl(country,catch)
max_catch<-fisheries_tidy%>%
select(country,catch)
max_catch
max_catch<-fisheries_tidy%>%
select(country,catch)%>%
group_by(country)
max_catch
max_catch<-fisheries_tidy%>%
select(country,catch)%>%
sort_by(country)
max_catch<-fisheries_tidy%>%
select(country,catch)%>%
sort(country)
max_catch<-fisheries_tidy%>%
select(country,catch)%>%
summarise(country)
max_catch
max_catch<-fisheries_tidy%>%
select(country,catch)%>%
summarise(country,catch)
max_catch
fisheries_tidy%>%
group_by(country,catch)%>%
summarise(n=n(), .groups='keep')
max_catch
fisheries_tidy%>%
count(country,catch,sort=T)
View(max_catch)
fisheries_tidy%>%
count(catch,sort=T)
fisheries_tidy%>%
count(country,sort=T)
fisheries_tidy%>%
count(country,catch,sort=T)
fisheries_tidy%>%
count(country,catch,sort=T)%?%
filter(year==2000)
fisheries_tidy%>%
count(country,catch,sort=T)%>%
filter(year==2000)
fisheries_tidy%>%
count(country,catch,year,sort=T)%>%
filter(year==2000)
