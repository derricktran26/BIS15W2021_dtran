library(janitor)
janitor(UC_admit_td)%>%
group_by(Academic_Yr)%>%
summarise(Campus,Academic_Yr,Category,Ethnicity,`Perc FR`,FilteredCountFR)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(janitor)
janitor(UC_admit_td)
clean_names(UC_admit_td)
make_clean_names(UC_admit_td)
clean_names(UC_admit_td)
UC_admit_td<-clean_names(UC_admit_td)
structure(UC_admit_td)
View(UC_admit_td)
transform(UC_admit_td,category=as.factor(category))
UC_admit_td%>%
group_by(category)%>%
summarise(academic_yr,campus,ethnicity)
transform(UC_admit_td,category=as.factor(category))
transform(UC_admit_td,ethnicity=as.factor(ethnicity))
UC_admit_td%>%
group_by(category)%>%
summarise(academic_yr,campus,ethnicity)
UC_admit_td%>%
group_by(category)%>%
summarise(academic_yr,campus,ethnicity)
UC_admit_td
UC_admit_td<-
transform(UC_admit_td,category=as.factor(category))
UC_admit_td<-
transform(UC_admit_td,category=as.factor(category))
transform(UC_admit_td,ethnicity=as.factor(ethnicity))
UC_admit_td%>%
group_by(ethnicity)%>%
summarise(campus,academic_yr,category)
UC_admit_td%>%
group_by(ethnicity)%>%
summarise(campus,academic_yr,category)%>%
ggplot(aes(x=academic_yr,y=ethnicity))+
geom_point()
UC_admit_td%>%
group_by(ethnicity)%>%
summarise(campus,academic_yr,category)%>%
ggplot(aes(x=ethnicity,y=academic_yr))+
geom_point()
UC_admit_td%>%
group_by(ethnicity)%>%
summarise(campus,academic_yr,category)%>%
ggplot(aes(x=ethnicity,y=academic_yr))+
geom_col()
point
UC_admit_td%>%
group_by(ethnicity)%>%
summarise(campus,academic_yr,category)%>%
ggplot(aes(x=ethnicity,y=academic_yr))+
geom_point()
UC_admit_td%>%
group_by(ethnicity)%>%
summarise(campus,academic_yr,category)%>%
ggplot(aes(x=category,y=academic_yr))+
geom_point()
UC_admit_td%>%
group_by(ethnicity)%>%
summarise(campus,academic_yr,category)
UC_admit_td%>%
group_by(ethnicity)%>%
summarise(campus,academic_yr,category)%>%
count(ethnicity)
UC_admit_td%>%
group_by(ethnicity)%>%
summarise(campus,academic_yr,category)%>%
count(category)
UC_admit_td%>%
group_by(ethnicity)%>%
summarise(campus,academic_yr,category,perc_fr)%>%
count(category)
UC_admit_td%>%
group_by(ethnicity)%>%
summarise(campus,academic_yr,category,perc_fr)%>%
count(perc_fr)
transform(UC_admit_td,perc_fr=as.double(perc_fr))
knitr::opts_chunk$set(echo = TRUE)
if (!require("tidyverse")) install.packages('tidyverse')
library(tidyverse)
library(shiny)
library(shinydashboard)
library(janitor)
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit%>%
group_by(Ethnicity)%>%
count()
UC_admit_td<-UC_admit%>%
filter(Ethnicity!="Unknown")%>%
filter(Ethnicity!="All")
structure(UC_admit)
UC_admit%>%
select(Category)%>%
count(Category)
transform(UC_admit,Academic_Yr=as.integer(Academic_Yr))
UC_admit_td<-UC_admit%>%
filter(Ethnicity!="Unknown")%>%
filter(Ethnicity!="All")
UC_admit_td<-UC_admit%>%
filter(Ethnicity!="Unknown")%>%
filter(Ethnicity!="All")
UC_admit_td<-clean_names(UC_admit_td)
UC_admit_td<-
transform(UC_admit_td,category=as.factor(category))
transform(UC_admit_td,ethnicity=as.factor(ethnicity))
#transform(UC_admit_td,perc_fr=as.double(perc_fr))
UC_admit_td%>%
str_remove(perc_fr,"%")
UC_admit_td%>%
str_remove(.,"%")
UC_admit_td%>%
str_remove("%")
View(UC_admit_td)
UC_admit_td<-UC_admit_td%>%
str_remove("%")
UC_admit_td<-UC_admit_td%>%
str_remove("%")
knitr::opts_chunk$set(echo = TRUE)
if (!require("tidyverse")) install.packages('tidyverse')
library(tidyverse)
library(shiny)
library(shinydashboard)
library(janitor)
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit_td<-UC_admit%>%
filter(Ethnicity!="Unknown")%>%
filter(Ethnicity!="All")
UC_admit_td<-clean_names(UC_admit_td)
UC_admit_td<-
transform(UC_admit_td,category=as.factor(category))
transform(UC_admit_td,ethnicity=as.factor(ethnicity))
#transform(UC_admit_td,perc_fr=as.double(perc_fr))
UC_admit_td<-select_all(UC_admit_td,~str_replace(.,"%"))
UC_admit_td<-select_all(UC_admit_td,~str_replace(%))
UC_admit_td<-select_all(UC_admit_td,~str_replace("%"))
UC_admit_td<-select_all(UC_admit_td,~str_replace(.,"%"))
UC_admit_td<-select_all(UC_admit_td,~str_replace("%",""))
UC_admit_td<-select_all(UC_admit_td,~str_replace("%",.))
UC_admit_td<-select_all(UC_admit_td,~str_replace("%","0"))
UC_admit_td<-select_all(UC_admit_td,~str_replace("%","."))
UC_admit_td<-select_all(UC_admit_td,~str_replace("%",))
UC_admit_td<-select_all(UC_admit_td,~str_replace("%","-"))
UC_admit_td<-select_all(UC_admit_td,~str_replace(perc_fr,"[%]",""))
UC_admit_td<-select_all(UC_admit_td,~str_replace("[%]",""))
UC_admit_td<-select_all(UC_admit_td,~str_replace("[%]","%"))
UC_admit_td<-select_all(UC_admit_td,~str_replace("[%]","%","."))
transform(UC_admit_td,perc_fr=as.string(perc_fr))
transform(UC_admit_td,perc_fr=as.factor(perc_fr))
UC_admit_td<-UC_admit%>%
filter(Ethnicity!="Unknown")%>%
filter(Ethnicity!="All")
UC_admit_td<-clean_names(UC_admit_td)
UC_admit_td<-
transform(UC_admit_td,category=as.factor(category))
transform(UC_admit_td,ethnicity=as.factor(ethnicity))
transform(UC_admit_td,perc_fr=as.factor(perc_fr))
structure(UC_admit)
UC_admit_td%>%
group_by(ethnicity)%>%
summarise(campus,academic_yr,category,perc_fr)%>%
count(perc_fr)
UC_admit_td%>%
group_by(ethnicity)%>%
summarise(campus,academic_yr,category,perc_fr)
UC_admit_td%>%
group_by(academic_yr)%>%
summarise(campus,academic_yr,category,ethnicity,perc_fr,filtered_count_fr)%>%
ggplot(aes(x=campus,y=perc_fr,fill=ethnicity))+
geom_col(position = "dodge")+
theme(legend.position = "bottom",
axis.text = element_text(angle = 60,hjust = 1))
names(UC_admit_td)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("campus","academic_yr","category","ethnicity"),
selected = "campus"),
plotOutput("plot",width = "500px",height = "400px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y, color="ethnicity")) + geom_col()+ theme_light(base_size = 18)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y)) + geom_col()+ theme_light(base_size = 50)+theme(axis.title.x=element_text(angle = 60,hjust=1))
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("campus","academic_yr","category","ethnicity"),
selected = "campus"),
plotOutput("plot",width = "500px",height = "400px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y)) + geom_col()+ theme_light(base_size = 50)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y)) + geom_col()+ theme_light(base_size = 10)+theme(axis.title.x=element_text(angle = 60,hjust=1))
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("campus","academic_yr","category","ethnicity"),
selected = "campus"),
plotOutput("plot",width = "500px",height = "400px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y)) + geom_col()+ theme_light(base_size = 10)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("campus","academic_yr","category","ethnicity"),
selected = "campus"),
plotOutput("plot",width = "500px",height = "400px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y)) + geom_col()+ theme_light(base_size = 12)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("campus","academic_yr","category","ethnicity"),
selected = "campus"),
plotOutput("plot",width = "1000px",height = "900px")
)
)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("campus","academic_yr","category","ethnicity"),
selected = "campus"),
plotOutput("plot",width = "1000px",height = "900px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y)) + geom_col()+ theme_light(base_size = 12)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("ethnicity"),
selected = "ethnicty"),
selectInput("y","Select y variable",choices = c("campus","academic_yr","category","ethnicity"),
selected = "campus"),
plotOutput("plot",width = "1000px",height = "900px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y)) + geom_col()+ theme_light(base_size = 12)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr"),
selected = "campus"),
plotOutput("plot",width = "1000px",height = "900px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y)) + geom_col()+ theme_light(base_size = 12)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr"),
selected = "campus"),
plotOutput("plot",width = "1000px",height = "900px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y, color="ethnicity")) + geom_col()+ theme_light(base_size = 12)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr","filtered_count_fr"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr","filtered_count_fr"),
selected = "campus"),
plotOutput("plot",width = "1000px",height = "900px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y, color="ethnicity")) + geom_col()+ theme_light(base_size = 12)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr","filtered_count_fr"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr","filtered_count_fr"),
selected = "campus"),
plotOutput("plot",width = "1000px",height = "900px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y, color="ethnicity")) + geom_col(position = "dodge")+ theme_light(base_size = 12)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr","filtered_count_fr"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr","filtered_count_fr"),
selected = "campus"),
plotOutput("plot",width = "1000px",height = "900px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y, fill="ethnicity")) + geom_col(position = "dodge")+ theme_light(base_size = 12)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
UC_admit_td<-UC_admit%>%
filter(Ethnicity!="Unknown")%>%
filter(Ethnicity!="All")
UC_admit_td<-clean_names(UC_admit_td)
UC_admit_td<-
transform(UC_admit_td,category=as.factor(category))
transform(UC_admit_td,ethnicity=as.factor(ethnicity))
transform(UC_admit_td,perc_fr=as.factor(perc_fr))
transform(UC_admit_td,academic_yr=as.factor(academic_yr))
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr","filtered_count_fr"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr","filtered_count_fr"),
selected = "campus"),
plotOutput("plot",width = "1000px",height = "900px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y, fill="ethnicity")) + geom_col(position = "dodge")+ theme_light(base_size = 12)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
UC_admit_td<-UC_admit%>%
filter(Ethnicity!="Unknown")%>%
filter(Ethnicity!="All")
UC_admit_td<-clean_names(UC_admit_td)
UC_admit_td<-
transform(UC_admit_td,category=as.factor(category))
transform(UC_admit_td,ethnicity=as.factor(ethnicity))
transform(UC_admit_td,perc_fr=as.factor(perc_fr))
transform(UC_admit_td,academic_yr=as.integer(academic_yr))
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr","filtered_count_fr"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr","filtered_count_fr"),
selected = "campus"),
plotOutput("plot",width = "1000px",height = "900px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y, fill="ethnicity")) + geom_col(position = "dodge")+ theme_light(base_size = 12)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr","filtered_count_fr"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr","filtered_count_fr"),
selected = "campus"),
plotOutput("plot",width = "1000px",height = "900px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y, fill="ethnicity")) + geom_col(position = "dodge")+ theme_light(base_size = 12)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr","filtered_count_fr"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("filtered_count_fr"),
selected = "filtered_count_fr"),
plotOutput("plot",width = "1000px",height = "900px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y, fill="ethnicity")) + geom_col(position = "dodge")+ theme_light(base_size = 12)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Tracking Ethnicity among UC Campus Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("campus","academic_yr","category","ethnicity","perc_fr","filtered_count_fr"),
selected = "campus"),
selectInput("y","Select y variable",choices = c("filtered_count_fr"),
selected = "filtered_count_fr"),
plotOutput("plot",width = "1000px",height = "900px")
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(UC_admit_td,aes_string(x=input$x,y=input$y, fill="ethnicity")) + geom_col(position = "dodge")+ theme_light(base_size = 12)+theme(axis.title.x=element_text(angle = 60,hjust=1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1, server_1)
